using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProyectoFinal
{
    class Program
    {
        static void Main(string[] args)
        {
            int asis;
            string res;
            bool val=false;
            int index = 0;
            Console.WriteLine("Lista de estudiantes: \n ");
            do
            {
                val = true;
                    index++;
                    Console.Write("Nombre del Estudiante N*{0}: ", index );
                    string nom = Console.ReadLine();
                    nom = nom.ToUpper();
                    Console.Write("Apellido del Estudiante N*{0}: ", index);
                    string ape = Console.ReadLine();
                    ape = ape.ToUpper();
                    Console.Write("Nota de la prueba (/20) del Estudiante N*{0}:  ", index);
                    string nota = Console.ReadLine();
                    Console.Write("Nota Examen (/20) del Estudiante N*{0}: ", index );
                    string exam = Console.ReadLine();

                    do
                    {
                        Console.Write("Asistencia del Estudiante N*{0}: (1-20)", index );
                        asis = int.Parse(Console.ReadLine());
                        if (asis == 0)
                        {
                            Console.Write("El estudiante nunca asistio.");
                        }
                        if (asis > 20 || asis < 0)
                        {
                            Console.Write("Favor ingresar dentro del regimen establecido");
                        }
                    }
                    while (asis > 20 || asis < 0);
                    
                
                Console.WriteLine("Desea ingresar otro estudiante? (S/N)");
                res = Console.ReadLine();
                if (res.ToUpper().Equals("N")) val = false;
                Console.WriteLine();
            }
            while (val);
            Console.ReadKey();
        }
    }
}


/* ESTE CODIGO ES GRACIAS A LA SOFY*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



namespace Ingeso_datos
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] nombresEstudiantes = null;
            string[] apellidoEstudiantes = null;
            double[] notasEstudiantes = null;
            double[] examenEstudiantes = null;
            int[] asistenciasEstudiantes = null;
            string[] aprobacionEstudiantes = null;

            int asis;
            string res;
            bool val = false;
            int posEstu = 0;
            int index = 0;
            int p_index = 0;
            do
            {
                val = true;
                index++;
                Console.Write("Nombre del Estudiante N*{0}: ", index);
                string nom = Console.ReadLine();
                nom = nom.ToUpper();
                Console.Write("Apellido del Estudiante N*{0}: ", index);
                string ape = Console.ReadLine();
                ape = ape.ToUpper();
                Console.Write("Nota de la prueba (/20) del Estudiante N*{0}:  ", index);
                double nota = Convert.ToDouble(Console.ReadLine());
                Console.Write("Nota Examen (/20) del Estudiante N*{0}: ", index);
                double exam = Convert.ToDouble(Console.ReadLine());

                do
                {
                    Console.Write("Asistencia del Estudiante N*{0}: (1-20)", index);
                    asis = int.Parse(Console.ReadLine());
                    if (asis == 0)
                    {
                        Console.Write("El estudiante nunca asistio.");
                    }
                    if (asis > 20 || asis < 0)
                    {
                        Console.Write("Favor ingresar dentro del regimen establecido");
                    }
                }
                while (asis > 20 || asis < 0);


                Console.WriteLine("Desea ingresar otro estudiante? (S/N)");
                res = Console.ReadLine();
                if (res.ToUpper().Equals("N")) val = false;
                Console.WriteLine();
                InicializarValores(index, nom, ape, nota, exam, asis, ref nombresEstudiantes, ref apellidoEstudiantes, ref notasEstudiantes, ref examenEstudiantes, ref asistenciasEstudiantes, ref posEstu);
            }
            while (val);
            ascendenteApellido( p_index, ref nombresEstudiantes, ref apellidoEstudiantes, ref notasEstudiantes, ref examenEstudiantes, ref asistenciasEstudiantes);
            imprimir(ref nombresEstudiantes, ref apellidoEstudiantes, ref notasEstudiantes, ref examenEstudiantes, ref asistenciasEstudiantes);
            Console.ReadKey();
        }
        static void InicializarValores(int index, string nom, string ape, double nota, double exam, int asis, ref string[] nombresEstudiantes, ref string[] apellidoEstudiantes, ref double[] notasEstudiantes, ref double[] examenEstudiantes, ref int[] asistenciaEstudiantes, ref int posEstu)
        {
            if (nombresEstudiantes == null)
                nombresEstudiantes = new string[100];
            for (int i = posEstu; i < index; i++)
            {

                nombresEstudiantes[i] = nom;
            }
            if (apellidoEstudiantes == null)
                apellidoEstudiantes = new string[100];
            for (int i = posEstu; i < index; i++)
            {

                apellidoEstudiantes[i] = ape;
            }
            if (notasEstudiantes == null)
                notasEstudiantes = new double[100];
            for (int i = posEstu; i < index; i++)
            {

                notasEstudiantes[i] = nota;
            }
            if (examenEstudiantes == null)
                examenEstudiantes = new double[100];
            for (int i = posEstu; i < index; i++)
            {

                examenEstudiantes[i] = exam;
            }
            if (asistenciaEstudiantes == null)
                asistenciaEstudiantes = new int[100];
            for (int i = posEstu; i < index; i++)
            {

                asistenciaEstudiantes[i] = asis;
            }
            posEstu++;
        }
        static void ascendenteApellido(int p_index,ref string[] nombresEstudiantes, ref string[] apellidoEstudiantes, ref double[] notasEstudiantes, ref double[] examenEstudiantes, ref int[] asistenciaEstudiantes)
        {
            string itercambiarNombre;
            string itercambiarApellio;
            double intercambiarNota;
            double intercambioExamen;
            int intercambioAsistencia;
            for (int i = 1; i < apellidoEstudiantes.Length; i++)
            {
                for (int j = apellidoEstudiantes.Length-1;j>=i; j--)
                {
                    if (apellidoEstudiantes[j] == null || apellidoEstudiantes[j - 1] == null)
                    {
                        continue;
                    }
                    else if (apellidoEstudiantes[j - 1].CompareTo(apellidoEstudiantes[j]) > 0)
                    {
                        //intercambia nombres
                            itercambiarNombre = nombresEstudiantes[j - 1];
                        nombresEstudiantes[j - 1] = nombresEstudiantes[j];
                        nombresEstudiantes[j] = itercambiarNombre;

                        //intercambia apellidos
                            itercambiarApellio = apellidoEstudiantes[j - 1];
                        apellidoEstudiantes[j - 1] = apellidoEstudiantes[j];
                        apellidoEstudiantes[j] = itercambiarApellio;

                        //intercambia nota
                            intercambiarNota = notasEstudiantes[j - 1];
                        notasEstudiantes[j - 1] = notasEstudiantes[j];
                        notasEstudiantes[j] = intercambiarNota;

                        //intercambia examen
                            intercambioExamen = examenEstudiantes[j - 1];
                        examenEstudiantes[j - 1] = examenEstudiantes[j];
                        examenEstudiantes[j] = intercambioExamen;

                        //intercambia asistencia
                            intercambioAsistencia = asistenciaEstudiantes[j - 1];
                        asistenciaEstudiantes[j - 1] = asistenciaEstudiantes[j];
                        asistenciaEstudiantes[j] = intercambioAsistencia;
                    }

                }
            }



        }
        static void imprimir(ref string[] nombresEstudiantes, ref string[] apellidoEstudiantes, ref double[] notasEstudiantes, ref double[] examenEstudiantes, ref int[] asistenciaEstudiantes)
        {
            Console.WriteLine("Nombre\t\tApellido\tNota\tExamen\tPromedio\tAsistencia\tResultado");
            for (int i = 0; i < nombresEstudiantes.Length; i++)
            {
                if (nombresEstudiantes[i] == null || apellidoEstudiantes[i] == null || notasEstudiantes[i] == 0 || examenEstudiantes[i] == 0 || asistenciaEstudiantes[i] == 0)
                {
                    continue;
                }
                else
                {

                    Console.WriteLine(nombresEstudiantes[i] + "\t" + apellidoEstudiantes[i] + "\t" + notasEstudiantes[i] + "\t" + examenEstudiantes[i] + "\t" + ((notasEstudiantes[i] + examenEstudiantes[i]) / 2) + "\t\t" + asistenciaEstudiantes[i]);

                }
            }
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Schema;

namespace desviacionstandar
{
    class Program
    {
        static double promediogeneral(int index,double [] promediogeneral)
        {
            double suma = 0;
            foreach (double calificacion in promediogeneral)
            {
                suma += calificacion;
            }
            return suma / index;
        }
        static double desviacionstandar(int index, double[] promedio)
        {
            double total=0;
            double result = 0;
            double tit;
            double cuadra;
            double[] sum=new double [100];
            for (int i = 0; i < promedio.Length; i++)
            {
                double nume = (promedio[i] - promediogeneral(index,promedio));
                double[] tito = { nume }; 
                for (int j = 0; j < tito.Length; j++)
                {
                    cuadra = (tito[j] * tito[j]);
                    sum[j] =  cuadra ; 
                    for (int q = 0; q < sum.Length; q++)
                    {
                        total += sum[q];
                        tit = (total / i );
                        result = Math.Sqrt(tit);
                    }
                }
            }
            return result;
        }
    }
}
